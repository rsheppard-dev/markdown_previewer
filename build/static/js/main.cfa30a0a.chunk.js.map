{"version":3,"sources":["components/Markdown.js","components/Previewer.js","App.js","index.js"],"names":["Markdown","text","handleChange","handleClick","id","className","onClick","value","onChange","marked","setOptions","breaks","Previewer","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","App","useState","setText","e","editor","document","getElementById","preview","querySelectorAll","forEach","button","classList","toggle","target","parentElement","ReactDOM","render","StrictMode"],"mappings":"+MA+BeA,EA/BE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAEtC,OACE,qBAAKC,GAAG,aAAaC,UAAU,0BAA/B,SACE,kCACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,gEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,MAAMD,GAAG,QACxB,qBAAKC,UAAU,MAAMD,GAAG,WACxB,qBAAKC,UAAU,MAAMD,GAAG,aAE1B,qBAAKC,UAAU,eAAf,SACE,qBAAIA,UAAU,yBAAd,UAAuC,mBAAGA,UAAU,sBAApD,eAEF,qBAAKA,UAAU,SAAf,SACE,wBAAQD,GAAG,aAAaC,UAAU,gBAAgBC,QAASH,EAA3D,SACE,mBAAGE,UAAU,gDAInB,qBAAKA,UAAU,YAAf,SACE,0BAAUD,GAAG,SAASC,UAAU,eAAeE,MAAON,EAAMO,SAAUN,c,gCCnBlFO,IAAOC,WAAW,CAChBC,QAAQ,IAGV,IAoCeC,EApCG,SAAC,GAA2B,IAAzBX,EAAwB,EAAxBA,KAAME,EAAkB,EAAlBA,YAOzB,OACE,qBAAKC,GAAG,cAAcC,UAAU,0BAAhC,SACE,kCACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,gEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,MAAMD,GAAG,QACxB,qBAAKC,UAAU,MAAMD,GAAG,WACxB,qBAAKC,UAAU,MAAMD,GAAG,aAE1B,qBAAKC,UAAU,eAAf,SACE,qBAAIA,UAAU,yBAAd,UAAuC,mBAAGA,UAAU,eAApD,kBAEF,qBAAKA,UAAU,SAAf,SACE,wBAAQD,GAAG,cAAcE,QAASH,EAAaE,UAAU,gBAAzD,SACE,mBAAGA,UAAU,gDAInB,qBAAKA,UAAU,YAAf,SACE,qBAAKD,GAAG,UAAUC,UAAU,8BAA8BQ,wBAvB3D,CAAEC,OADKC,IAAUC,SAASP,IAAOR,iBCwE7BgB,MA9Ef,WAAgB,IAAD,EACWC,mBAAS,slCADpB,mBACNjB,EADM,KACAkB,EADA,KA6CPhB,EAAc,SAAAiB,GAClB,IAAMC,EAASC,SAASC,eAAe,cACjCC,EAAUF,SAASC,eAAe,eACpBD,SAASG,iBAAiB,gBAElCC,SAAQ,SAAAC,GAClBA,EAAOC,UAAUC,OAAO,wBACxBF,EAAOC,UAAUC,OAAO,6BAGN,eAAhBT,EAAEU,OAAO1B,IAAqD,eAA9BgB,EAAEU,OAAOC,cAAc3B,IACzDoB,EAAQI,UAAUC,OAAO,UACzBR,EAAOO,UAAUC,OAAO,cAExBR,EAAOO,UAAUC,OAAO,UACxBL,EAAQI,UAAUC,OAAO,cAI7B,OACE,+BACE,qBAAKxB,UAAU,0BAAf,SAEE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAUJ,KAAMA,EAAMC,aA5BT,SAAAkB,GACnBD,EAAQC,EAAEU,OAAOvB,QA2BuCJ,YAAaA,IAC/D,cAAC,EAAD,CAAWF,KAAMA,EAAME,YAAaA,YCrE9C6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASC,eAAe,W","file":"static/js/main.cfa30a0a.chunk.js","sourcesContent":["const Markdown = ({ text, handleChange, handleClick }) => {\r\n\r\n  return (\r\n    <div id=\"editor-win\" className=\"col-md-12 col-lg-6 mb-3\">\r\n      <section>\r\n        <div className=\"card tx-dark bg-light\">\r\n          <div className=\"card-header d-flex align-items-center justify-content-between\">\r\n            <div className=\"dots d-flex\">\r\n              <div className=\"dot\" id=\"red\"></div>\r\n              <div className=\"dot\" id=\"orange\"></div>\r\n              <div className=\"dot\" id=\"green\"></div>\r\n            </div>\r\n            <div className=\"title d-flex\">\r\n              <h1 className=\"card-title text-center\"><i className=\"fas fa-pen-square\"></i> Editor</h1>\r\n            </div>\r\n            <div className=\"button\">\r\n              <button id=\"editor-btn\" className=\"btn btn-light\" onClick={handleClick}>\r\n                <i className=\"fas size-button fa-expand-arrows-alt\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <textarea id=\"editor\" className=\"form-control\" value={text} onChange={handleChange}>\r\n            </textarea>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Markdown;","import marked from 'marked';\r\nimport DOMPurify from 'dompurify';\r\n\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\n\r\nconst Previewer = ({ text, handleClick }) => {\r\n\r\n  const createMarkup = () => {\r\n    const clean = DOMPurify.sanitize(marked(text));\r\n    return { __html: clean };\r\n  }\r\n\r\n  return (\r\n    <div id=\"preview-win\" className=\"col-md-12 col-lg-6 mb-3\">\r\n      <section>\r\n        <div className=\"card tx-dark bg-light\">\r\n          <div className=\"card-header d-flex align-items-center justify-content-between\">\r\n            <div className=\"dots d-flex\">\r\n              <div className=\"dot\" id=\"red\"></div>\r\n              <div className=\"dot\" id=\"orange\"></div>\r\n              <div className=\"dot\" id=\"green\"></div>\r\n            </div>\r\n            <div className=\"title d-flex\">\r\n              <h1 className=\"card-title text-center\"><i className=\"fas fa-eye\"></i> Previewer</h1>\r\n            </div>\r\n            <div className=\"button\">\r\n              <button id=\"preview-btn\" onClick={handleClick} className=\"btn btn-light\">\r\n                <i className=\"fas size-button fa-expand-arrows-alt\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div id=\"preview\" className=\"border rounded p-2 bg-white\" dangerouslySetInnerHTML={createMarkup()}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Previewer;","import { useState } from 'react';\nimport Markdown from './components/Markdown';\nimport Previewer from './components/Previewer';\n\nfunction App() {\n  const [text, setText] = useState(`# React Markdown Previewer!\n  ## Made by Roy Sheppard\n  ### Cheat sheet:\n\n  Inline code: \\`<div></div>\\`\n\n  \\`\\`\\`\n  // sample of multi-line code:\n\n  const displayMarkdown = () => {\n    console.log('This is multi-line code');\n  }\n  \\`\\`\\`\n\n  You can also make text **bold**... whoa!\n  Or _italic_.\n  Or... wait for it... **_both!_**\n  And feel free to go crazy ~~crossing stuff out~~.\n\n  There's also [links](http://www.roy-sheppard.com), and\n  > Block Quotes!\n\n  And if you want to get really crazy, even tables:\n\n  Wild Header | Crazy Header | Another Header?\n  ------------ | ------------- | -------------\n  Your content can | be here, and it | can be here....\n  And here. | Okay. | I think we get it.\n\n  - And of course there are lists.\n    - Some are bulleted.\n      - With different indentation levels.\n        - That look like this.\n\n  1. And there are numbererd lists too.\n  1. Use just 1s if you want!\n  1. And last but not least, let's not forget embedded images:\n\n  ![React Logo w/ Text](https://i.pinimg.com/originals/f3/47/70/f34770503b90f26ea389f557500ff825.png)`);\n\n  const handleChange = e => {\n    setText(e.target.value);\n  }\n\n  const handleClick = e => {\n    const editor = document.getElementById('editor-win');\n    const preview = document.getElementById('preview-win');\n    const sizeButtons = document.querySelectorAll('.size-button');\n\n    sizeButtons.forEach(button => {\n      button.classList.toggle('fa-expand-arrows-alt');\n      button.classList.toggle('fa-compress-arrows-alt');\n    });\n\n    if (e.target.id === \"editor-btn\" || e.target.parentElement.id === \"editor-btn\") {\n      preview.classList.toggle('d-none');\n      editor.classList.toggle('col-lg-6');\n    } else {\n      editor.classList.toggle('d-none');\n      preview.classList.toggle('col-lg-6');\n    }\n  }\n\n  return (\n    <main>\n      <div className=\"App container-fluid p-4\">\n\n        <div className=\"row\">\n          <Markdown text={text} handleChange={handleChange} handleClick={handleClick} />\n          <Previewer text={text} handleClick={handleClick} />\n        </div>\n\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}